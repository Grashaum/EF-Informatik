"use strict";(self.webpackChunkef_website_template=self.webpackChunkef_website_template||[]).push([[452],{3905:(e,n,t)=>{t.d(n,{Zo:()=>o,kt:()=>m});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function d(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},s=Object.keys(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var u=r.createContext({}),l=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):d(d({},n),e)),t},o=function(e){var n=l(e.components);return r.createElement(u.Provider,{value:n},e.children)},h={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},c=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,s=e.originalType,u=e.parentName,o=a(e,["components","mdxType","originalType","parentName"]),c=l(t),m=i,k=c["".concat(u,".").concat(m)]||c[m]||h[m]||s;return t?r.createElement(k,d(d({ref:n},o),{},{components:t})):r.createElement(k,d({ref:n},o))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var s=t.length,d=new Array(s);d[0]=c;var a={};for(var u in n)hasOwnProperty.call(n,u)&&(a[u]=n[u]);a.originalType=e,a.mdxType="string"==typeof e?e:i,d[1]=a;for(var l=2;l<s;l++)d[l]=t[l];return r.createElement.apply(null,d)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},1100:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>d,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>l});var r=t(7462),i=(t(7294),t(3905));const s={},d="LERNZIELE",a={unversionedId:"Netzwerke/Lernziele",id:"Netzwerke/Lernziele",title:"LERNZIELE",description:"Funktionsweise Server-Client Modell",source:"@site/docs/Netzwerke/Lernziele.md",sourceDirName:"Netzwerke",slug:"/Netzwerke/Lernziele",permalink:"/EF-Informatik/docs/Netzwerke/Lernziele",draft:!1,editUrl:"https://github.com/Grashaum/EF-Informatik/tree/main/docs/Netzwerke/Lernziele.md",tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Kapitel 3-8",permalink:"/EF-Informatik/docs/Netzwerke/Kapitel 3-8"},next:{title:"Cheat-sheet",permalink:"/EF-Informatik/docs/Netzwerke/apis"}},u={},l=[{value:"Funktionsweise Server-Client Modell",id:"funktionsweise-server-client-modell",level:2},{value:"Funktionsweise und Aufgaben einer API",id:"funktionsweise-und-aufgaben-einer-api",level:2},{value:"HTTP Methoden GET, POST, PUT, DELETE",id:"http-methoden-get-post-put-delete",level:3},{value:"Funktionsweise eines simplen Web-Servers:",id:"funktionsweise-eines-simplen-web-servers",level:3},{value:"Was ist ein Protokoll?",id:"was-ist-ein-protokoll",level:3},{value:"TCP-IP Stack:",id:"tcp-ip-stack",level:3},{value:"Anwendungsschicht:",id:"anwendungsschicht",level:3},{value:"Transportschicht:",id:"transportschicht",level:3},{value:"Vermittlungsschicht/Internetschicht:",id:"vermittlungsschichtinternetschicht",level:3},{value:"Aufbau einer IP-Adresse:",id:"aufbau-einer-ip-adresse",level:3},{value:"Subnetze: Subnetze sind Teilnetze innerhalb eines gr\xf6\xdferen Netzwerks. Durch die",id:"subnetze-subnetze-sind-teilnetze-innerhalb-eines-gr\xf6\xdferen-netzwerks-durch-die",level:3},{value:"Private und \xf6ffentliche IP-Adressen: Private IP-Adressen sind Adressen, die in lokalen",id:"private-und-\xf6ffentliche-ip-adressen-private-ip-adressen-sind-adressen-die-in-lokalen",level:3},{value:"Berechnung der Anzahl Netzwerke und Hosts mit der Subnetzmaske: Die Anzahl der",id:"berechnung-der-anzahl-netzwerke-und-hosts-mit-der-subnetzmaske-die-anzahl-der",level:3},{value:"Physikalische Schicht/Netzzugangsschicht:",id:"physikalische-schichtnetzzugangsschicht",level:3}],o={toc:l};function h(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,r.Z)({},o,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"lernziele"},"LERNZIELE"),(0,i.kt)("h2",{id:"funktionsweise-server-client-modell"},"Funktionsweise Server-Client Modell"),(0,i.kt)("p",null,"Das Server-Client-Modell ist ein verbreitetes Konzept in der Informationstechnologie, das die Interaktion zwischen Computern in einem Netzwerk beschreibt. Dabei \xfcbernimmt der Server die Rolle des zentralen Dienstleisters, der Informationen, Ressourcen oder Services bereitstellt, w\xe4hrend der Client die Rolle des Anfragenden oder Nutzenden einnimmt, der diese Dienste in Anspruch nimmt. Hier ist eine grobe Erkl\xe4rung der Funktionsweise des Server-Client-Modells:"),(0,i.kt)("p",null,"Server: Der Server ist ein leistungsstarker Computer oder eine spezialisierte Hardware, die Dienste oder Ressourcen bereitstellt. Er kann eine Vielzahl von Funktionen ausf\xfchren, wie z.B. Datenbanken, Webseiten, E-Mail-Dienste, Dateiserver oder Anwendungen. Der Server ist immer eingeschaltet und wartet darauf, Anfragen von Clients zu erhalten."),(0,i.kt)("p",null,"Client: Der Client ist ein Computer, ein Smartphone, ein Tablet oder eine andere Ger\xe4te, das mit dem Server kommuniziert, um Dienste oder Ressourcen abzurufen. Der Client kann eine spezielle Software oder eine Webanwendung nutzen, um die Anfragen an den Server zu senden und die Antworten zu erhalten."),(0,i.kt)("p",null,"Anfrage und Antwort: Der Client sendet eine Anfrage an den Server, in der er bestimmte Informationen oder Dienste anfordert. Diese Anfrage kann beispielsweise das Laden einer Webseite, das Abrufen von Daten aus einer Datenbank oder das Senden einer E-Mail umfassen. Der Server empf\xe4ngt die Anfrage, verarbeitet sie und sendet eine entsprechende Antwort zur\xfcck an den Client."),(0,i.kt)("p",null,"Kommunikationsprotokolle: Die Kommunikation zwischen Server und Client erfolgt \xfcber definierte Kommunikationsprotokolle wie HTTP (Hypertext Transfer Protocol) f\xfcr Webanwendungen, SMTP (Simple Mail Transfer Protocol) f\xfcr E-Mails oder FTP (File Transfer Protocol) f\xfcr den Dateitransfer. Diese Protokolle legen die Regeln und Standards fest, wie die Anfragen und Antworten strukturiert und \xfcbermittelt werden."),(0,i.kt)("p",null,"Skalierbarkeit und Lastverteilung: Das Server-Client-Modell erm\xf6glicht eine Skalierbarkeit der Dienste, indem mehrere Server eingesetzt werden, um die Last zu bew\xe4ltigen. Lastverteilungsmechanismen sorgen daf\xfcr, dass Anfragen auf verschiedene Server verteilt werden, um die Auslastung gleichm\xe4\xdfig zu verteilen und die Leistung zu optimieren."),(0,i.kt)("p",null,"Das Server-Client-Modell bildet die Grundlage f\xfcr viele Netzwerkdienste und Anwendungen, die im Internet und in lokalen Netzwerken verwendet werden. Es erm\xf6glicht eine effiziente Kommunikation zwischen Computern und die Bereitstellung von Diensten und Ressourcen \xfcber das Netzwerk. "),(0,i.kt)("h2",{id:"funktionsweise-und-aufgaben-einer-api"},"Funktionsweise und Aufgaben einer API"),(0,i.kt)("p",null,"Eine API (Application Programming Interface) ist eine Schnittstelle, die es verschiedenen Anwendungen erm\xf6glicht, miteinander zu kommunizieren und Daten oder Funktionen auszutauschen. Die Funktionsweise und Aufgaben einer API k\xf6nnen wie folgt beschrieben werden:"),(0,i.kt)("p",null,"Kommunikation und Daten\xfcbertragung: Eine API definiert die Kommunikationsprotokolle, Datenformate und Methoden, die von einer Anwendung verwendet werden k\xf6nnen, um mit einer anderen Anwendung zu interagieren. Sie stellt eine standardisierte Schnittstelle bereit, \xfcber die Daten zwischen den Anwendungen ausgetauscht werden k\xf6nnen."),(0,i.kt)("p",null,"Zugriff auf Funktionen und Ressourcen: Eine API erm\xf6glicht den Zugriff auf spezifische Funktionen, Dienste oder Ressourcen einer Anwendung. Sie definiert, welche Operationen durchgef\xfchrt werden k\xf6nnen und welche Daten verf\xfcgbar sind. Entwickler k\xf6nnen die API nutzen, um bestimmte Aufgaben zu automatisieren oder auf die Funktionalit\xe4t einer Anwendung zuzugreifen."),(0,i.kt)("p",null,"Datenformatierung und -transformation: APIs k\xf6nnen auch eine Rolle bei der Formatierung und Transformation von Daten spielen. Sie k\xf6nnen beispielsweise Daten aus einem bestimmten Format in ein anderes Format umwandeln, um eine reibungslose Kommunikation zwischen verschiedenen Anwendungen zu gew\xe4hrleisten."),(0,i.kt)("p",null,"Sicherheit und Zugriffskontrolle: APIs bieten auch Sicherheitsmechanismen und Zugriffskontrollen, um den gesch\xfctzten Zugriff auf Daten und Funktionen zu gew\xe4hrleisten. Sie k\xf6nnen Authentifizierungs- und Autorisierungsmechanismen implementieren, um sicherzustellen, dass nur autorisierte Anwendungen oder Benutzer auf die API zugreifen k\xf6nnen."),(0,i.kt)("p",null,"Vereinfachung der Entwicklung: Eine API abstrahiert komplexe Funktionen und Datenstrukturen und stellt eine vereinfachte Schnittstelle bereit, die von Entwicklern leichter genutzt werden kann. Sie erm\xf6glicht es, Anwendungen schneller zu entwickeln, da Entwickler auf vorhandene Funktionen und Dienste zugreifen k\xf6nnen, anstatt sie von Grund auf neu zu entwickeln."),(0,i.kt)("p",null,"Die Aufgaben einer API variieren je nach Kontext und Anwendungsbereich. APIs k\xf6nnen beispielsweise in Webentwicklung, mobilen Anwendungen, Datenbanken, Cloud-Services und vielen anderen Bereichen eingesetzt werden. Sie sind ein grundlegendes Konzept in der Softwareentwicklung und erm\xf6glichen die Integration und Interoperabilit\xe4t verschiedener Anwendungen und Systeme."),(0,i.kt)("h3",{id:"http-methoden-get-post-put-delete"},"HTTP Methoden GET, POST, PUT, DELETE"),(0,i.kt)("p",null,"Die HTTP-Methoden GET, POST, PUT und DELETE sind grundlegende Methoden, die in der Kommunikation zwischen Clients (z. B. Webbrowsern) und Servern im World Wide Web verwendet werden. Hier ist eine Erkl\xe4rung der einzelnen Methoden:"),(0,i.kt)("p",null,"GET: Die GET-Methode wird verwendet, um Daten vom Server abzurufen. Wenn ein Client eine GET-Anfrage sendet, fordert er bestimmte Ressourcen oder Informationen vom Server an. Die Anfrage wird in der Regel \xfcber die URL (Uniform Resource Locator) an den Server gesendet. Die Antwort des Servers enth\xe4lt dann die gew\xfcnschten Daten, die an den Client zur\xfcckgesendet werden."),(0,i.kt)("p",null,"POST: Die POST-Methode wird verwendet, um Daten an den Server zu senden und diese Daten zu verarbeiten. Im Gegensatz zur GET-Methode, bei der die Daten in der URL \xfcbermittelt werden, werden bei POST die Daten im Body der Anfrage \xfcbertragen. POST wird h\xe4ufig verwendet, wenn Formulardaten oder andere Informationen an den Server gesendet werden, die dort verarbeitet werden sollen, beispielsweise das Speichern von Daten in einer Datenbank."),(0,i.kt)("p",null,"PUT: Die PUT-Methode wird verwendet, um Daten an eine bestimmte URL zu senden und diese Daten auf dem Server zu aktualisieren oder zu ersetzen. Mit PUT k\xf6nnen neue Ressourcen erstellt werden oder bestehende Ressourcen aktualisiert werden. Der Client sendet die Daten, die aktualisiert oder hinzugef\xfcgt werden sollen, im Body der Anfrage an den Server. PUT wird h\xe4ufig in RESTful-APIs verwendet, um Daten zu aktualisieren oder hochzuladen."),(0,i.kt)("p",null,"DELETE: Die DELETE-Methode wird verwendet, um eine bestimmte Ressource auf dem Server zu l\xf6schen. Der Client sendet eine DELETE-Anfrage an den Server, um die angegebene Ressource zu entfernen. Die DELETE-Methode erfordert normalerweise die Angabe der URL der zu l\xf6schenden Ressource."),(0,i.kt)("p",null,"Diese vier HTTP-Methoden (GET, POST, PUT, DELETE) bilden das Grundger\xfcst f\xfcr die Interaktion zwischen Clients und Servern im Web. Sie erm\xf6glichen es, Daten abzurufen, Daten zu senden, Daten zu aktualisieren oder zu l\xf6schen und spielen eine zentrale Rolle bei der Entwicklung von Webanwendungen und der Kommunikation zwischen verschiedenen Systemen im Internet."),(0,i.kt)("h3",{id:"funktionsweise-eines-simplen-web-servers"},"Funktionsweise eines simplen Web-Servers:"),(0,i.kt)("p",null,"Ein einfacher Web-Server empf\xe4ngt HTTP-Anfragen von Clients, verarbeitet sie und sendet die entsprechenden HTTP-Antworten zur\xfcck\nan die Clients. Er verwendet das HTTP-Protokoll, um die Kommunikation zwischen dem\nServer und den Clients zu erm\xf6glichen."),(0,i.kt)("h3",{id:"was-ist-ein-protokoll"},"Was ist ein Protokoll?"),(0,i.kt)("p",null,"Ein Protokoll ist eine Reihe von Regeln und Standards, die den\nAustausch von Daten zwischen Ger\xe4ten oder Systemen regeln. Es definiert das Format der\nDaten, die w\xe4hrend der Kommunikation gesendet werden, sowie die Verfahren und Regeln,\ndie befolgt werden m\xfcssen, um eine erfolgreiche Kommunikation zu gew\xe4hrleisten."),(0,i.kt)("h3",{id:"tcp-ip-stack"},"TCP-IP Stack:"),(0,i.kt)("p",null,"Der TCP/IP-Stack ist ein Referenzmodell f\xfcr Netzwerkprotokolle, das aus\nverschiedenen Schichten besteht, die jeweils spezifische Funktionen haben. Die wichtigsten\nSchichten sind:\n\u2022 Anwendungsschicht: Hier finden sich Protokolle wie HTTP, DNS und DHCP, die f\xfcr den\nDatenaustausch zwischen Anwendungen zust\xe4ndig sind.\n\u2022 Transportschicht: Diese Schicht umfasst Protokolle wie TCP (Transmission Control Protocol)\nund UDP (User Datagramm Protocol), die den sicheren und zuverl\xe4ssigen Transport von\nDaten zwischen Endpunkten erm\xf6glichen.\n\u2022 Vermittlungsschicht/Internetschicht: Hier arbeitet das IP-Protokoll, das die Adressierung und\ndas Routing von Datenpaketen im Internet erm\xf6glicht.\n\u2022 Physikalische Schicht/Netzzugangsschicht: Diese Schicht behandelt die physische\n\xdcbertragung der Daten \xfcber das Netzwerkmedium, z. B. \xfcber Ethernet oder WLAN."),(0,i.kt)("h3",{id:"anwendungsschicht"},"Anwendungsschicht:"),(0,i.kt)("p",null,"\u2022 HTTP (Hypertext Transfer Protocol): Protokoll zur \xdcbertragung von Webseiten und anderen\nDaten im Internet.\n\u2022 DNS (Domain Name System): Protokoll zur Aufl\xf6sung von Dom\xe4nennamen (z. B.\n",(0,i.kt)("a",{parentName:"p",href:"http://www.example.com"},"www.example.com"),") in IP-Adressen.\n\u2022 DHCP (Dynamic Host Konfiguration Protocol): Protokoll zur automatischen Zuweisung von\nNetzwerkkonfigurationen wie IP-Adressen an Ger\xe4te in einem Netzwerk."),(0,i.kt)("h3",{id:"transportschicht"},"Transportschicht:"),(0,i.kt)("p",null,"\u2022 TCP (Transmission Control Protocol): Protokoll, das eine verbindungsorientierte, zuverl\xe4ssige\n\xdcbertragung von Datenpaketen erm\xf6glicht.\n\u2022 UDP (User Datagramm Protocol): Protokoll, das eine verbindungslose \xdcbertragung von\nDatenpaketen erm\xf6glicht und weniger zuverl\xe4ssig ist als TCP, aber geringere Latenzzeiten\naufweist."),(0,i.kt)("h3",{id:"vermittlungsschichtinternetschicht"},"Vermittlungsschicht/Internetschicht:"),(0,i.kt)("p",null,"\u2022 IP (Internet Protocol): Protokoll, das die Adressierung und das Routing von Datenpaketen\nim Internet erm\xf6glicht."),(0,i.kt)("h3",{id:"aufbau-einer-ip-adresse"},"Aufbau einer IP-Adresse:"),(0,i.kt)("p",null,"Eine IP-Adresse besteht aus einer Reihe von Zahlen, die zur\nIdentifizierung eines Netzwerkger\xe4ts verwendet werden. Sie besteht aus zwei Teilen: der\nNetzwerkadresse und der Hostadresse. Eine IPv4-Adresse besteht aus vier durch Punkte\ngetrennten Zahlen, z. B. 192.168.0.1.\n\u2022 Subnetzmasken: Die Subnetzmaske wird verwendet, um den Teil einer IP-Adresse zu\nidentifizieren, der das Netzwerk angibt. Sie trennt die Netzwerkadresse von der\nHostadresse. Eine Subnetzmaske besteht ebenfalls aus vier durch Punkte getrennten\nZahlen, z. B. 255.255.255.0."),(0,i.kt)("h3",{id:"subnetze-subnetze-sind-teilnetze-innerhalb-eines-gr\xf6\xdferen-netzwerks-durch-die"},"Subnetze: Subnetze sind Teilnetze innerhalb eines gr\xf6\xdferen Netzwerks. Durch die"),(0,i.kt)("p",null,"Verwendung von Subnetzen k\xf6nnen gro\xdfe Netzwerke in kleinere, effiziente zu\nverwaltende Teile aufgeteilt werden."),(0,i.kt)("h3",{id:"private-und-\xf6ffentliche-ip-adressen-private-ip-adressen-sind-adressen-die-in-lokalen"},"Private und \xf6ffentliche IP-Adressen: Private IP-Adressen sind Adressen, die in lokalen"),(0,i.kt)("p",null,"Netzwerken verwendet werden und nicht direkt im Internet geroutet werden k\xf6nnen.\n\xd6ffentliche IP-Adressen sind eindeutige Adressen, die von Internetdienstanbietern (ISPs)\nzugewiesen werden und den direkten Zugriff auf das Internet erm\xf6glichen."),(0,i.kt)("h3",{id:"berechnung-der-anzahl-netzwerke-und-hosts-mit-der-subnetzmaske-die-anzahl-der"},"Berechnung der Anzahl Netzwerke und Hosts mit der Subnetzmaske: Die Anzahl der"),(0,i.kt)("p",null,"verf\xfcgbaren Netzwerke und Hosts kann mit der Subnetzmaske bestimmt werden. Durch\ndie Kombination der Netzwerkteilbits in der Subnetzmaske l\xe4sst sich die Anzahl der\nNetzwerke bestimmen, w\xe4hrend die verbleibenden Hostteilbits die Anzahl der Hosts pro\nNetzwerk bestimmen."),(0,i.kt)("h3",{id:"physikalische-schichtnetzzugangsschicht"},"Physikalische Schicht/Netzzugangsschicht:"),(0,i.kt)("p",null,"\u2022 ARP (Adresse Resolution Protocol): Protokoll, das IP-Adressen in MAC-Adressen aufl\xf6st, um\ndie Kommunikation auf der physikalischen Schicht zu erm\xf6glichen.\n\u2022 Aufbau eines IP-Frames: Ein IP-Frame besteht aus einem Header, der Informationen wie\nQuell- und Ziel-IP-Adresse enth\xe4lt, und einem Payload, der die eigentlichen Daten enth\xe4lt.\n\u2022 Aufbau eines Ethernet-Frames: Ein Ethernet-Frame enth\xe4lt den Header mit Quell- und Ziel\x02MAC-Adresse sowie den Payload mit den Daten.\n\u2022 Aufbau einer MAC-Adresse: Eine MAC-Adresse ist eine eindeutige Kennung, die einem\nNetzwerkger\xe4t zugewiesen ist. Sie besteht aus 48 Bits, die \xfcblicherweise als sechsstellige\nHexadezimalzahl dargestellt werden.\n\u2022 Switch vs. Router: Ein Switch verbindet Ger\xe4te in einem lokalen Netzwerk und erm\xf6glicht die\nKommunikation zwischen ihnen auf der Ethernet-Ebene. Ein Router verbindet verschiedene\nNetzwerke und erm\xf6glicht den Datenverkehr zwischen ihnen auf der Netzwerkebene.\n\u2022 Ablauf ARP: Das Adresse Resolution Protocol (ARP) wird verwendet, um die Zuordnung\nzwischen IP-Adressen und MAC-Adressen zu ermitteln. Es sendet Anfragen im Netzwerk, um\ndie MAC-Adresse eines bestimmten Ger\xe4ts mit einer bekannten IP-Adresse zu ermitteln.\n\u2022 Switch- und Routing-Tabellen lesen und verstehen: Switch-Tabellen enthalten Informationen\nzur Zuordnung von MAC-Adressen zu Portnummern, w\xe4hrend Routing-Tabellen\nInformationen zur Weiterleitung von IP-Paketen enthalten.\n\u2022 Routing-Tabellen erstellen: Routing-Tabellen werden verwendet, um den Weg f\xfcr den\nDatenverkehr zwischen verschiedenen Netzwerken festzulegen. Sie enthalten Informationen\nwie Zielnetzwerke und zugeh\xf6rige Next-Hop-Adressen.\n\u2022 Netzwerke konfigurieren: Dies beinhaltet die Zuweisung von IP-Adressen, Subnetzmasken,\nStandardgateways und anderen Netzwerkkonfigurationen auf den Ger\xe4ten.\n\u2022 Aufgaben von NAT (Network Adresse Translation): NAT erm\xf6glicht die \xdcbersetzung von IP\x02Adressen zwischen \xf6ffentlichen und privaten Netzwerken, um den Zugriff auf das Internet f\xfcr\nGer\xe4te mit privaten IP-Adressen zu erm\xf6glichen.\n\u2022 Hole Punching: Hole Punching ist eine Technik, bei der eine Verbindung zwischen zwei\nGer\xe4ten in unterschiedlichen privaten Netzwerken hergestellt wird, indem tempor\xe4re\nDurchgangs\xf6ffnungen in den Netzwerkfirewalls erstellt werden. Dadurch k\xf6nnen die Ger\xe4te\ndirekt miteinander kommunizieren, obwohl sie sich hinter NAT befinden"))}h.isMDXComponent=!0}}]);