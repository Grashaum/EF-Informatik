"use strict";(self.webpackChunkef_website_template=self.webpackChunkef_website_template||[]).push([[452],{3905:(e,n,t)=>{t.d(n,{Zo:()=>o,kt:()=>k});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var u=r.createContext({}),d=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},o=function(e){var n=d(e.components);return r.createElement(u.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},h=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,l=e.originalType,u=e.parentName,o=a(e,["components","mdxType","originalType","parentName"]),h=d(t),k=i,m=h["".concat(u,".").concat(k)]||h[k]||c[k]||l;return t?r.createElement(m,s(s({ref:n},o),{},{components:t})):r.createElement(m,s({ref:n},o))}));function k(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var l=t.length,s=new Array(l);s[0]=h;var a={};for(var u in n)hasOwnProperty.call(n,u)&&(a[u]=n[u]);a.originalType=e,a.mdxType="string"==typeof e?e:i,s[1]=a;for(var d=2;d<l;d++)s[d]=t[d];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}h.displayName="MDXCreateElement"},1100:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>s,default:()=>c,frontMatter:()=>l,metadata:()=>a,toc:()=>d});var r=t(7462),i=(t(7294),t(3905));const l={},s="LERNZIELE",a={unversionedId:"Netzwerke/Lernziele",id:"Netzwerke/Lernziele",title:"LERNZIELE",description:"Funktionsweise Server-Client Modell",source:"@site/docs/Netzwerke/Lernziele.md",sourceDirName:"Netzwerke",slug:"/Netzwerke/Lernziele",permalink:"/EF-Informatik/docs/Netzwerke/Lernziele",draft:!1,editUrl:"https://github.com/Grashaum/EF-Informatik/tree/main/docs/Netzwerke/Lernziele.md",tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Kapitel 3-8",permalink:"/EF-Informatik/docs/Netzwerke/Kapitel 3-8"},next:{title:"Cheat-sheet",permalink:"/EF-Informatik/docs/Netzwerke/apis"}},u={},d=[{value:"Funktionsweise Server-Client Modell",id:"funktionsweise-server-client-modell",level:2},{value:"Funktionsweise und Aufgaben einer API",id:"funktionsweise-und-aufgaben-einer-api",level:2},{value:"HTTP Methoden GET, POST, PUT, DELETE",id:"http-methoden-get-post-put-delete",level:3},{value:"Funktionsweise eines simplen Web-Servers",id:"funktionsweise-eines-simplen-web-servers",level:3},{value:"Protokolle",id:"protokolle",level:2},{value:"Was ist ein Protokoll?",id:"was-ist-ein-protokoll",level:3},{value:"Erstellen eines Protokolls f\xfcr eine einfache Aufgabe mit Sequenz- und Zustandsdiagrammen",id:"erstellen-eines-protokolls-f\xfcr-eine-einfache-aufgabe-mit-sequenz--und-zustandsdiagrammen",level:3},{value:"Schichtenmodell",id:"schichtenmodell",level:2},{value:"TCP-IP Stack",id:"tcp-ip-stack",level:3},{value:"Auf jeder Schicht die zentralen Protokolle kennen und erkl\xe4ren k\xf6nnen",id:"auf-jeder-schicht-die-zentralen-protokolle-kennen-und-erkl\xe4ren-k\xf6nnen",level:2},{value:"Anwendungsschicht",id:"anwendungsschicht",level:3},{value:"Transportschicht",id:"transportschicht",level:3},{value:"Vermittlungsschicht/Internetschicht",id:"vermittlungsschichtinternetschicht",level:3},{value:"Physikalische Schicht/Netzzugangsschicht",id:"physikalische-schichtnetzzugangsschicht",level:3},{value:"Routing",id:"routing",level:2},{value:"Switch vs. Router",id:"switch-vs-router",level:3},{value:"Ablauf ARP",id:"ablauf-arp",level:3},{value:"Switch- und Routing-Tabellen lesen und verstehen",id:"switch--und-routing-tabellen-lesen-und-verstehen",level:3},{value:"Routing-Tabellen erstellen",id:"routing-tabellen-erstellen",level:3},{value:"Netzwerke konfigurieren",id:"netzwerke-konfigurieren",level:3},{value:"Standardgateway",id:"standardgateway",level:3},{value:"NAT",id:"nat",level:2},{value:"Aufgaben von NAT",id:"aufgaben-von-nat",level:3},{value:"Hole Punching",id:"hole-punching",level:3}],o={toc:d};function c(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,r.Z)({},o,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"lernziele"},"LERNZIELE"),(0,i.kt)("h2",{id:"funktionsweise-server-client-modell"},"Funktionsweise Server-Client Modell"),(0,i.kt)("p",null,"Das Server-Client-Modell ist ein verbreitetes Konzept in der Informationstechnologie, das die Interaktion zwischen Computern in einem Netzwerk beschreibt. Dabei \xfcbernimmt der Server die Rolle des zentralen Dienstleisters, der Informationen, Ressourcen oder Services bereitstellt, w\xe4hrend der Client die Rolle des Anfragenden oder Nutzenden einnimmt, der diese Dienste in Anspruch nimmt. Hier ist eine grobe Erkl\xe4rung der Funktionsweise des Server-Client-Modells:"),(0,i.kt)("p",null,"Server: Der Server ist ein leistungsstarker Computer oder eine spezialisierte Hardware, die Dienste oder Ressourcen bereitstellt. Er kann eine Vielzahl von Funktionen ausf\xfchren, wie z.B. Datenbanken, Webseiten, E-Mail-Dienste, Dateiserver oder Anwendungen. Der Server ist immer eingeschaltet und wartet darauf, Anfragen von Clients zu erhalten."),(0,i.kt)("p",null,"Client: Der Client ist ein Computer, ein Smartphone, ein Tablet oder eine andere Ger\xe4te, das mit dem Server kommuniziert, um Dienste oder Ressourcen abzurufen. Der Client kann eine spezielle Software oder eine Webanwendung nutzen, um die Anfragen an den Server zu senden und die Antworten zu erhalten."),(0,i.kt)("p",null,"Anfrage und Antwort: Der Client sendet eine Anfrage an den Server, in der er bestimmte Informationen oder Dienste anfordert. Diese Anfrage kann beispielsweise das Laden einer Webseite, das Abrufen von Daten aus einer Datenbank oder das Senden einer E-Mail umfassen. Der Server empf\xe4ngt die Anfrage, verarbeitet sie und sendet eine entsprechende Antwort zur\xfcck an den Client."),(0,i.kt)("p",null,"Kommunikationsprotokolle: Die Kommunikation zwischen Server und Client erfolgt \xfcber definierte Kommunikationsprotokolle wie HTTP (Hypertext Transfer Protocol) f\xfcr Webanwendungen, SMTP (Simple Mail Transfer Protocol) f\xfcr E-Mails oder FTP (File Transfer Protocol) f\xfcr den Dateitransfer. Diese Protokolle legen die Regeln und Standards fest, wie die Anfragen und Antworten strukturiert und \xfcbermittelt werden."),(0,i.kt)("p",null,"Skalierbarkeit und Lastverteilung: Das Server-Client-Modell erm\xf6glicht eine Skalierbarkeit der Dienste, indem mehrere Server eingesetzt werden, um die Last zu bew\xe4ltigen. Lastverteilungsmechanismen sorgen daf\xfcr, dass Anfragen auf verschiedene Server verteilt werden, um die Auslastung gleichm\xe4\xdfig zu verteilen und die Leistung zu optimieren."),(0,i.kt)("p",null,"Das Server-Client-Modell bildet die Grundlage f\xfcr viele Netzwerkdienste und Anwendungen, die im Internet und in lokalen Netzwerken verwendet werden. Es erm\xf6glicht eine effiziente Kommunikation zwischen Computern und die Bereitstellung von Diensten und Ressourcen \xfcber das Netzwerk. "),(0,i.kt)("h2",{id:"funktionsweise-und-aufgaben-einer-api"},"Funktionsweise und Aufgaben einer API"),(0,i.kt)("p",null,"Eine API (Application Programming Interface) ist eine Schnittstelle, die es verschiedenen Anwendungen erm\xf6glicht, miteinander zu kommunizieren und Daten oder Funktionen auszutauschen. Die Funktionsweise und Aufgaben einer API k\xf6nnen wie folgt beschrieben werden:"),(0,i.kt)("p",null,"Kommunikation und Daten\xfcbertragung: Eine API definiert die Kommunikationsprotokolle, Datenformate und Methoden, die von einer Anwendung verwendet werden k\xf6nnen, um mit einer anderen Anwendung zu interagieren. Sie stellt eine standardisierte Schnittstelle bereit, \xfcber die Daten zwischen den Anwendungen ausgetauscht werden k\xf6nnen."),(0,i.kt)("p",null,"Zugriff auf Funktionen und Ressourcen: Eine API erm\xf6glicht den Zugriff auf spezifische Funktionen, Dienste oder Ressourcen einer Anwendung. Sie definiert, welche Operationen durchgef\xfchrt werden k\xf6nnen und welche Daten verf\xfcgbar sind. Entwickler k\xf6nnen die API nutzen, um bestimmte Aufgaben zu automatisieren oder auf die Funktionalit\xe4t einer Anwendung zuzugreifen."),(0,i.kt)("p",null,"Datenformatierung und -transformation: APIs k\xf6nnen auch eine Rolle bei der Formatierung und Transformation von Daten spielen. Sie k\xf6nnen beispielsweise Daten aus einem bestimmten Format in ein anderes Format umwandeln, um eine reibungslose Kommunikation zwischen verschiedenen Anwendungen zu gew\xe4hrleisten."),(0,i.kt)("p",null,"Sicherheit und Zugriffskontrolle: APIs bieten auch Sicherheitsmechanismen und Zugriffskontrollen, um den gesch\xfctzten Zugriff auf Daten und Funktionen zu gew\xe4hrleisten. Sie k\xf6nnen Authentifizierungs- und Autorisierungsmechanismen implementieren, um sicherzustellen, dass nur autorisierte Anwendungen oder Benutzer auf die API zugreifen k\xf6nnen."),(0,i.kt)("p",null,"Vereinfachung der Entwicklung: Eine API abstrahiert komplexe Funktionen und Datenstrukturen und stellt eine vereinfachte Schnittstelle bereit, die von Entwicklern leichter genutzt werden kann. Sie erm\xf6glicht es, Anwendungen schneller zu entwickeln, da Entwickler auf vorhandene Funktionen und Dienste zugreifen k\xf6nnen, anstatt sie von Grund auf neu zu entwickeln."),(0,i.kt)("p",null,"Die Aufgaben einer API variieren je nach Kontext und Anwendungsbereich. APIs k\xf6nnen beispielsweise in Webentwicklung, mobilen Anwendungen, Datenbanken, Cloud-Services und vielen anderen Bereichen eingesetzt werden. Sie sind ein grundlegendes Konzept in der Softwareentwicklung und erm\xf6glichen die Integration und Interoperabilit\xe4t verschiedener Anwendungen und Systeme."),(0,i.kt)("h3",{id:"http-methoden-get-post-put-delete"},"HTTP Methoden GET, POST, PUT, DELETE"),(0,i.kt)("p",null,"Die HTTP-Methoden GET, POST, PUT und DELETE sind grundlegende Methoden, die in der Kommunikation zwischen Clients (z. B. Webbrowsern) und Servern im World Wide Web verwendet werden. Hier ist eine Erkl\xe4rung der einzelnen Methoden:"),(0,i.kt)("p",null,"GET: Die GET-Methode wird verwendet, um Daten vom Server abzurufen. Wenn ein Client eine GET-Anfrage sendet, fordert er bestimmte Ressourcen oder Informationen vom Server an. Die Anfrage wird in der Regel \xfcber die URL (Uniform Resource Locator) an den Server gesendet. Die Antwort des Servers enth\xe4lt dann die gew\xfcnschten Daten, die an den Client zur\xfcckgesendet werden."),(0,i.kt)("p",null,"POST: Die POST-Methode wird verwendet, um Daten an den Server zu senden und diese Daten zu verarbeiten. Im Gegensatz zur GET-Methode, bei der die Daten in der URL \xfcbermittelt werden, werden bei POST die Daten im Body der Anfrage \xfcbertragen. POST wird h\xe4ufig verwendet, wenn Formulardaten oder andere Informationen an den Server gesendet werden, die dort verarbeitet werden sollen, beispielsweise das Speichern von Daten in einer Datenbank."),(0,i.kt)("p",null,"PUT: Die PUT-Methode wird verwendet, um Daten an eine bestimmte URL zu senden und diese Daten auf dem Server zu aktualisieren oder zu ersetzen. Mit PUT k\xf6nnen neue Ressourcen erstellt werden oder bestehende Ressourcen aktualisiert werden. Der Client sendet die Daten, die aktualisiert oder hinzugef\xfcgt werden sollen, im Body der Anfrage an den Server. PUT wird h\xe4ufig in RESTful-APIs verwendet, um Daten zu aktualisieren oder hochzuladen."),(0,i.kt)("p",null,"DELETE: Die DELETE-Methode wird verwendet, um eine bestimmte Ressource auf dem Server zu l\xf6schen. Der Client sendet eine DELETE-Anfrage an den Server, um die angegebene Ressource zu entfernen. Die DELETE-Methode erfordert normalerweise die Angabe der URL der zu l\xf6schenden Ressource."),(0,i.kt)("p",null,"Diese vier HTTP-Methoden (GET, POST, PUT, DELETE) bilden das Grundger\xfcst f\xfcr die Interaktion zwischen Clients und Servern im Web. Sie erm\xf6glichen es, Daten abzurufen, Daten zu senden, Daten zu aktualisieren oder zu l\xf6schen und spielen eine zentrale Rolle bei der Entwicklung von Webanwendungen und der Kommunikation zwischen verschiedenen Systemen im Internet."),(0,i.kt)("h3",{id:"funktionsweise-eines-simplen-web-servers"},"Funktionsweise eines simplen Web-Servers"),(0,i.kt)("h2",{id:"protokolle"},"Protokolle"),(0,i.kt)("h3",{id:"was-ist-ein-protokoll"},"Was ist ein Protokoll?"),(0,i.kt)("h3",{id:"erstellen-eines-protokolls-f\xfcr-eine-einfache-aufgabe-mit-sequenz--und-zustandsdiagrammen"},"Erstellen eines Protokolls f\xfcr eine einfache Aufgabe mit Sequenz- und Zustandsdiagrammen"),(0,i.kt)("h2",{id:"schichtenmodell"},"Schichtenmodell"),(0,i.kt)("h3",{id:"tcp-ip-stack"},"TCP-IP Stack"),(0,i.kt)("h2",{id:"auf-jeder-schicht-die-zentralen-protokolle-kennen-und-erkl\xe4ren-k\xf6nnen"},"Auf jeder Schicht die zentralen Protokolle kennen und erkl\xe4ren k\xf6nnen"),(0,i.kt)("h3",{id:"anwendungsschicht"},"Anwendungsschicht"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"HTTP\n\nDNS\n\nDHCP\n\nPorts\n")),(0,i.kt)("h3",{id:"transportschicht"},"Transportschicht"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"TCP\n\nUDP\n")),(0,i.kt)("h3",{id:"vermittlungsschichtinternetschicht"},"Vermittlungsschicht/Internetschicht"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"IP\n\nAufbau einer IP-Adresse\n\nSubnetzmasken\n\nSubnetze\n\nPrivate und \xf6ffentliche IP-Adressen kennen\n\nBerechnung der Anzahl Netzwerke und Hosts mit der Subnetzmaske\n")),(0,i.kt)("h3",{id:"physikalische-schichtnetzzugangsschicht"},"Physikalische Schicht/Netzzugangsschicht"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"ARP\n\nAufbau eines IP-Frame\n\nAufbau eines Ethernet-Frames\n\nAufbau einer MAC-Adresse\n")),(0,i.kt)("h2",{id:"routing"},"Routing"),(0,i.kt)("h3",{id:"switch-vs-router"},"Switch vs. Router"),(0,i.kt)("h3",{id:"ablauf-arp"},"Ablauf ARP"),(0,i.kt)("h3",{id:"switch--und-routing-tabellen-lesen-und-verstehen"},"Switch- und Routing-Tabellen lesen und verstehen"),(0,i.kt)("h3",{id:"routing-tabellen-erstellen"},"Routing-Tabellen erstellen"),(0,i.kt)("h3",{id:"netzwerke-konfigurieren"},"Netzwerke konfigurieren"),(0,i.kt)("h3",{id:"standardgateway"},"Standardgateway"),(0,i.kt)("h2",{id:"nat"},"NAT"),(0,i.kt)("h3",{id:"aufgaben-von-nat"},"Aufgaben von NAT"),(0,i.kt)("h3",{id:"hole-punching"},"Hole Punching"))}c.isMDXComponent=!0}}]);